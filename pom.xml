<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.5.4</version>
    <relativePath/>
  </parent>

  <groupId>com.github.kronen</groupId>
  <artifactId>cellardoor-bom</artifactId>
  <version>0.10.1</version>
  <packaging>pom</packaging>

  <description>Parent pom providing dependency and plugin management for CellarDoor project</description>

  <licenses>
    <license>
      <name>GNU General Public License v3.0</name>
      <url>http://www.gnu.org/licenses/gpl-3.0.en.html</url>
    </license>
  </licenses>

  <developers>
    <developer>
      <id>kronen</id>
      <name>Alberto Gonzalez Lagos</name>
      <email>kronenr@gmail.com</email>
      <url>https://github.com/kronen</url>
      <roles>
        <role>architect</role>
        <role>developer</role>
      </roles>
      <timezone>Europe/Madrid</timezone>
    </developer>
  </developers>

  <scm>
    <connection>scm:git:git@github.com/Kronen/cellardoor-bom.git</connection>
    <developerConnection>scm:git:git@github.com/Kronen/cellardoor-bom.git</developerConnection>
    <url>https://github.com/Kronen/cellardoor-bom</url>
    <tag>HEAD</tag>
  </scm>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <java.version>21</java.version>

    <lombok.version>1.18.36</lombok.version>
    <mapstruct.version>1.6.3</mapstruct.version>
    <lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version>
    <commons-lang.version>3.18.0</commons-lang.version>
    <swagger-annotations.version>2.2.17</swagger-annotations.version>
    <instancio-junit.version>5.5.0</instancio-junit.version>

    <maven-compiler-plugin.version>3.14.0</maven-compiler-plugin.version>
    <maven.compiler.release>${java.version}</maven.compiler.release>
    <maven-enforcer-plugin.version>3.6.1</maven-enforcer-plugin.version>
    <maven-source-plugin.version>3.3.0</maven-source-plugin.version>
    <maven-javadoc-plugin.version>3.11.2</maven-javadoc-plugin.version>
    <maven-gpg-plugin.version>3.1.0</maven-gpg-plugin.version>
    <maven-checkstyle-plugin.version>3.6.0</maven-checkstyle-plugin.version>
    <checkstyle.version>10.26.1</checkstyle.version>
    <formatter-maven-plugin.version>2.25.0</formatter-maven-plugin.version>
    <git-commit-id-maven-plugin.version>9.0.2</git-commit-id-maven-plugin.version>
    <spotless-maven-plugin.version>2.44.3</spotless-maven-plugin.version>
    <maven-scm-plugin.version>2.1.0</maven-scm-plugin.version>
    <jacoco-maven-plugin.version>0.8.13</jacoco-maven-plugin.version>
    <openapi-generator-plugin.version>7.14.0</openapi-generator-plugin.version>
    <maven-site-plugin.version>3.21.0</maven-site-plugin.version>
    <maven-project-info-reports-plugin.version>3.9.0</maven-project-info-reports-plugin.version>
    <maven-pmd-plugin.version>3.26.0</maven-pmd-plugin.version>
    <exec-maven-plugin.version>3.5.1</exec-maven-plugin.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>${lombok.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.mapstruct</groupId>
        <artifactId>mapstruct</artifactId>
        <version>${mapstruct.version}</version>
      </dependency>
      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok-mapstruct-binding</artifactId>
        <version>${lombok-mapstruct-binding.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>${commons-lang.version}</version>
      </dependency>

      <dependency>
        <groupId>io.swagger.core.v3</groupId>
        <artifactId>swagger-annotations</artifactId>
        <version>${swagger-annotations.version}</version>
      </dependency>

      <!-- Testing -->
      <dependency>
        <groupId>io.rest-assured</groupId>
        <artifactId>rest-assured</artifactId>
        <version>${rest-assured.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.instancio</groupId>
        <artifactId>instancio-junit</artifactId>
        <version>${instancio-junit.version}</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
    </dependency>
    <dependency>
      <groupId>org.mapstruct</groupId>
      <artifactId>mapstruct</artifactId>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok-mapstruct-binding</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-logging</artifactId>
    </dependency>

    <!-- Testing -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <executions>
            <execution>
              <id>build-info</id>
              <goals>
                <goal>build-info</goal>
              </goals>
              <configuration>
                <additionalProperties>
                  <java.version>${java.version}</java.version>
                </additionalProperties>
              </configuration>
            </execution>
          </executions>
          <configuration>
            <layers>
              <enabled>true</enabled>
              <includeLayerTools>true</includeLayerTools>
            </layers>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>${maven-site-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>com.amashchenko.maven.plugin</groupId>
          <artifactId>gitflow-maven-plugin</artifactId>
          <version>1.21.0</version>
          <configuration>
            <skipFeatureVersion>true</skipFeatureVersion>
            <pushRemote>false</pushRemote>
            <gitFlowConfig>
              <developmentBranch>main</developmentBranch>
              <productionBranch>main</productionBranch>
              <versionTagPrefix>v</versionTagPrefix>
            </gitFlowConfig>
          </configuration>
        </plugin>
        <plugin>
          <groupId>io.github.git-commit-id</groupId>
          <artifactId>git-commit-id-maven-plugin</artifactId>
          <version>${git-commit-id-maven-plugin.version}</version>
          <!-- If using Spring Actuator the Git information will be returned when calling /info endpoint -->
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-plugin.version}</version>
          <configuration>
            <annotationProcessorPaths>
              <path>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-processor</artifactId>
                <version>${mapstruct.version}</version>
              </path>
              <path>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
              </path>
              <path>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok-mapstruct-binding</artifactId>
                <version>${lombok-mapstruct-binding.version}</version>
              </path>
            </annotationProcessorPaths>
            <compilerArgs>
              <compilerArg>-Amapstruct.defaultComponentModel=spring</compilerArg>
            </compilerArgs>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>${maven-enforcer-plugin.version}</version>
          <executions>
            <execution>
              <id>enforce-versions</id>
              <goals>
                <goal>enforce</goal>
              </goals>
              <configuration>
                <rules>
                  <requireMavenVersion>
                    <version>[3.9.9,)</version>
                  </requireMavenVersion>
                  <requireJavaVersion>
                    <version>${java.version}</version>
                  </requireJavaVersion>
                  <requireReleaseDeps>
                    <onlyWhenRelease>true</onlyWhenRelease>
                    <message>Release builds must not have on snapshot dependencies</message>
                  </requireReleaseDeps>
                </rules>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>${maven-checkstyle-plugin.version}</version>
          <dependencies>
            <dependency>
              <groupId>com.puppycrawl.tools</groupId>
              <artifactId>checkstyle</artifactId>
              <version>${checkstyle.version}</version>
            </dependency>
          </dependencies>
          <executions>
            <execution>
              <phase>validate</phase>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <failOnViolation>true</failOnViolation>
            <logViolationsToConsole>true</logViolationsToConsole>
            <configLocation>checkstyle.xml</configLocation>
          </configuration>
        </plugin>
        <plugin>
          <groupId>com.diffplug.spotless</groupId>
          <artifactId>spotless-maven-plugin</artifactId>
          <version>${spotless-maven-plugin.version}</version>
          <configuration>
            <formats>
              <format>
                <includes>
                  <include>*.md</include>
                  <include>.gitignore</include>
                  <include>README.md</include>
                  <include>"config/**/*.xml"</include>
                  <include>"src/**/*.xml"</include>
                  <include>"*.yml"</include>
                  <include>"*.yaml"</include>
                </includes>
                <indent>
                  <tabs>true</tabs>
                  <spacesPerTab>4</spacesPerTab>
                </indent>
              </format>
            </formats>
            <java>
              <includes>
                <include>src/main/java/**/*.java</include>
                <include>src/test/java/**/*.java</include>
              </includes>
              <cleanthat>
                <mutators>
                  <mutator>SafeAndConsensual</mutator>
                  <mutator>SafeButNotConsensual</mutator>
                </mutators>
              </cleanthat>
              <palantirJavaFormat>
                <version>2.39.0</version>
                <style>PALANTIR</style>
                <formatJavadoc>false</formatJavadoc>
              </palantirJavaFormat>
              <indent>
                <tabs>true</tabs>
                <spacesPerTab>4</spacesPerTab>
              </indent>
              <indent>
                <spaces>true</spaces>
                <spacesPerTab>2</spacesPerTab>
              </indent>
              <importOrder>
                <wildcardsLast>false</wildcardsLast>
                <order>java|javax,com.github.kronen,#</order>
                <semanticSort>false</semanticSort>
              </importOrder>
              <replaceRegex>
                <name>Remove wildcard imports</name>
                <searchRegex>import\s+(?:static\s+)?[^\*\s]+\*;(\r\n|\r|\n)</searchRegex>
                <replacement>$1</replacement>
              </replaceRegex>
              <removeUnusedImports/>
              <formatAnnotations/>
              <toggleOffOn/>
            </java>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco-maven-plugin.version}</version>
          <executions>
            <execution>
              <id>prepare-agent</id>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
            </execution>
            <execution>
              <id>report</id>
              <goals>
                <goal>report</goal>
              </goals>
              <configuration>
                <formats>
                  <format>XML</format>
                </formats>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.openapitools</groupId>
          <artifactId>openapi-generator-maven-plugin</artifactId>
          <version>${openapi-generator-plugin.version}</version>
          <configuration>
            <generatorName>spring</generatorName>
            <apiPackage>${project.groupId}.${project.artifactId}.api</apiPackage>
            <modelPackage>${project.groupId}.${project.artifactId}.dto</modelPackage>
            <invokerPackage>${project.groupId}.${project.artifactId}.invoker</invokerPackage>
            <inputSpec>${project.basedir}/src/main/resources/openapi.yaml</inputSpec>
            <configOptions>
              <openApiNullable>false</openApiNullable>
              <performBeanValidation>true</performBeanValidation>
              <library>spring-boot</library>
              <useSpringBoot3>true</useSpringBoot3>
              <reactive>true</reactive>
              <interfaceOnly>true</interfaceOnly>
              <dateLibrary>java8</dateLibrary>
              <useSpringController>false</useSpringController>
              <documentationProvider>springdoc</documentationProvider>
              <skipDefaultInterface>true</skipDefaultInterface>
              <useTags>true</useTags>
            </configOptions>
            <modelNameSuffix>DTO</modelNameSuffix>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>io.github.git-commit-id</groupId>
        <artifactId>git-commit-id-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>com.amashchenko.maven.plugin</groupId>
        <artifactId>gitflow-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>check-openapi-exists</id>
            <phase>initialize</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <exportAntProperties>true</exportAntProperties>
              <target>
                <condition property="skip.openapi" value="false" else="true">
                  <available file="${project.basedir}/src/main/resources/api/openapi.yaml"/>
                </condition>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>${exec-maven-plugin.version}</version>
        <executions>
          <!-- Check if Redocly is installed or install -->
          <execution>
            <id>check-redocly</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <skip>${skip.openapi}</skip>
              <executable>cmd</executable>
              <arguments>
                <argument>/c</argument>
                <argument>redocly --version || npm install -g @redocly/cli@latest</argument>
              </arguments>
            </configuration>
          </execution>
          <!-- Run Redocly bundle command -->
          <execution>
            <id>bundle-openapi</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <skip>${skip.openapi}</skip>
              <executable>redocly</executable>
              <workingDirectory>${project.basedir}/src/main/resources</workingDirectory>
              <arguments>
                <argument>bundle</argument>
                <argument>api/openapi.yaml</argument>
                <argument>-o</argument>
                <argument>openapi.yaml</argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>${maven-project-info-reports-plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>${maven-pmd-plugin.version}</version>
        <configuration>
          <rulesets>
            <ruleset>/category/java/bestpractices.xml</ruleset>
            <ruleset>/category/java/codestyle.xml</ruleset>
            <ruleset>/category/java/design.xml</ruleset>
            <ruleset>/category/java/errorprone.xml</ruleset>
            <ruleset>/category/java/multithreading.xml</ruleset>
            <ruleset>/category/java/performance.xml</ruleset>
          </rulesets>
          <minimumTokens>100</minimumTokens>
          <targetJdk>${java.version}</targetJdk>
          <excludes>
            <exclude>**/*Bean.java</exclude>
            <exclude>**/generated/*.java</exclude>
          </excludes>
          <excludeRoots>
            <excludeRoot>target/generated-sources/stubs</excludeRoot>
          </excludeRoots>
        </configuration>
        <reportSets>
          <reportSet><!-- by default, id = "default" -->
            <reports><!-- select non-aggregate reports -->
              <report>pmd</report>
              <report>cpd</report>
            </reports>
          </reportSet>
          <reportSet><!-- aggregate reportSet, to define in poms having modules -->
            <id>aggregate</id>
            <inherited>false</inherited> <!-- don't run aggregate in child modules -->
            <reports>
              <report>aggregate-pmd</report>
              <report>aggregate-cpd</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
    </plugins>
  </reporting>

  <profiles>
    <profile>
      <id>ghrepo</id>
      <build>
        <plugins>
          <!-- Deployment to Github cellardoor repo -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <version>${maven-source-plugin.version}</version>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar-no-fork</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <version>${maven-javadoc-plugin.version}</version>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <distributionManagement>
        <repository>
          <id>github</id>
          <name>GitHub Kronen Apache Maven Packages</name>
          <url>https://maven.pkg.github.com/Kronen/cellardoor-bom</url>
        </repository>
      </distributionManagement>
    </profile>
  </profiles>


</project>

